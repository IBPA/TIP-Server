# this is an auto generated file. This will be overwritten
query ValidateAssay(
  $type: String!
  $protein: String
  $gene: String
  $concentrationSubstrate: Float
  $concentrationTested: Float
  $inhibition: Float
  $ec50: String
  $ahrType: String
  $species: String
  $pmids: [Int]
  $comment: String
) {
  validateAssay(
    type: $type
    protein: $protein
    gene: $gene
    concentrationSubstrate: $concentrationSubstrate
    concentrationTested: $concentrationTested
    inhibition: $inhibition
    ec50: $ec50
    ahrType: $ahrType
    species: $species
    pmids: $pmids
    comment: $comment
  ) {
    status
    message
  }
}
query ValidateChemical(
  $cid: Int
  $cas: String
  $iupac: String
  $inchiKey: String
  $otherNames: [String]
  $smiles: String
  $mw: Float
) {
  validateChemical(
    cid: $cid
    cas: $cas
    iupac: $iupac
    inchiKey: $inchiKey
    otherNames: $otherNames
    smiles: $smiles
    mw: $mw
  ) {
    status
    message
  }
}
query GetAssay($id: ID!) {
  getAssay(id: $id) {
    id
    type
    enzymeData {
      protein
      gene
      concentrationSubstrate
      concentrationTested
      inhibition
      ec50
    }
    ahrData {
      ahrType
    }
    species
    pmids
    comment
    chemicalID
    chemical {
      id
      cid
      cas
      iupac
      inchikey
      other_names
      smiles
      mw
      assays {
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
query ListAssays(
  $filter: ModelAssayFilterInput
  $limit: Int
  $nextToken: String
) {
  listAssays(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      type
      enzymeData {
        protein
        gene
        concentrationSubstrate
        concentrationTested
        inhibition
        ec50
      }
      ahrData {
        ahrType
      }
      species
      pmids
      comment
      chemicalID
      chemical {
        id
        cid
        cas
        iupac
        inchikey
        other_names
        smiles
        mw
        createdAt
        updatedAt
      }
      createdAt
      updatedAt
    }
    nextToken
  }
}
query GetChemical($id: ID!) {
  getChemical(id: $id) {
    id
    cid
    cas
    iupac
    inchikey
    other_names
    smiles
    mw
    assays {
      items {
        id
        type
        species
        pmids
        comment
        chemicalID
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
query ListChemicals(
  $filter: ModelChemicalFilterInput
  $limit: Int
  $nextToken: String
) {
  listChemicals(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      cid
      cas
      iupac
      inchikey
      other_names
      smiles
      mw
      assays {
        nextToken
      }
      createdAt
      updatedAt
    }
    nextToken
  }
}
